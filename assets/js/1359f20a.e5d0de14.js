"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[1414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),h=i,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8470:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={},o="Inversion",s={unversionedId:"RenderEngine/Shaders/Inversion",id:"RenderEngine/Shaders/Inversion",title:"Inversion",description:"With the Inversion shader, you can invert the colors of the texture to be rendered with a specific amount.",source:"@site/docs/RenderEngine/Shaders/Inversion.md",sourceDirName:"RenderEngine/Shaders",slug:"/RenderEngine/Shaders/Inversion",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Inversion",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RenderEngine/Shaders/Inversion.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hole",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Hole"},next:{title:"Light 3D",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Light3D"}},l={},u=[{value:"Usage",id:"usage",level:2},{value:"Initialize",id:"initialize",level:3},{value:"Setters",id:"setters",level:2},{value:"amount",id:"amount",level:3},{value:"Getters",id:"getters",level:2},{value:"amount",id:"amount-1",level:3},{value:"Examples",id:"examples",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"inversion"},"Inversion"),(0,i.kt)("p",null,"With the Inversion shader, you can invert the colors of the texture to be rendered with a specific amount."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"If you want to use shaders that come with the Lightning framework you need to import Lightning first."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import Lightning from '@lightningjs/core'\n")),(0,i.kt)("h3",{id:"initialize"},"Initialize"),(0,i.kt)("p",null,"To use the Inversion shader you need to apply it to the shader property of an element:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"//in template\nclass MyApp extends Lightning.Application {\n    static _template() {\n        return {\n            Picture: {w: 300, h: 300, src: 'MyImage.jpg', shader: {type: Lightning.shaders.Inversion, amount: 3}}\n        }\n    }\n}\n\n//in a component\nthis.tag('Picture').shader = {type: Lightning.shaders.Inversion, amount: 2}\n")),(0,i.kt)("p",null,"You can customize the appearance of the Inversion shader with the following setters."),(0,i.kt)("h2",{id:"setters"},"Setters"),(0,i.kt)("h3",{id:"amount"},"amount"),(0,i.kt)("p",null,"You can set the inversion amount with a ",(0,i.kt)("inlineCode",{parentName:"p"},"float")," value."),(0,i.kt)("h2",{id:"getters"},"Getters"),(0,i.kt)("h3",{id:"amount-1"},"amount"),(0,i.kt)("p",null,"returns the current inversion ",(0,i.kt)("inlineCode",{parentName:"p"},"amount")," value."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Visit the following site to see various examples of the Rounded Rectangle Shader."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://lightningjs.io/examples/#/shaders/inversion"},"https://lightningjs.io/examples/#/shaders/inversion")))}d.isMDXComponent=!0}}]);