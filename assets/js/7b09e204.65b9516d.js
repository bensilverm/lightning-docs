"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[9021],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),h=i,k=c["".concat(s,".").concat(h)]||c[h]||u[h]||o;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),i=(n(7294),n(3905));const o={},a="Spinner2",l={unversionedId:"RenderEngine/Shaders/Spinner2",id:"RenderEngine/Shaders/Spinner2",title:"Spinner2",description:"The Spinner2 shader allows you to draw a loading / spinner icon on the screen. The Spinner2 shader is a successor to the Spinner shader which we do not recommend you use, its namespace however remains for backward compatibility.",source:"@site/docs/RenderEngine/Shaders/Spinner2.md",sourceDirName:"RenderEngine/Shaders",slug:"/RenderEngine/Shaders/Spinner2",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Spinner2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RenderEngine/Shaders/Spinner2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rounded Rectangle",permalink:"/lightning-docs/docs/RenderEngine/Shaders/RoundedRectangle"},next:{title:"Vignette",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Vignette"}},s={},d=[{value:"Usage",id:"usage",level:2},{value:"Initialize",id:"initialize",level:3},{value:"Setters",id:"setters",level:2},{value:"radius",id:"radius",level:3},{value:"stroke",id:"stroke",level:3},{value:"color",id:"color",level:3},{value:"backgroundColor",id:"backgroundcolor",level:3},{value:"showDot",id:"showdot",level:3},{value:"clockwise",id:"clockwise",level:3},{value:"period",id:"period",level:3},{value:"Getters",id:"getters",level:2},{value:"radius",id:"radius-1",level:3},{value:"stroke",id:"stroke-1",level:3},{value:"color",id:"color-1",level:3},{value:"backgroundColor",id:"backgroundcolor-1",level:3},{value:"showDot",id:"showdot-1",level:3},{value:"clockwise",id:"clockwise-1",level:3},{value:"period",id:"period-1",level:3},{value:"Examples",id:"examples",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"spinner2"},"Spinner2"),(0,i.kt)("p",null,"The Spinner2 shader allows you to draw a loading / spinner icon on the screen. The Spinner2 shader is a successor to the Spinner shader which we do not recommend you use, its namespace however remains for backward compatibility."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"If you want to use shaders that come with the Lightning framework you need to import Lightning first."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import Lightning from '@lightningjs/core'\n")),(0,i.kt)("h3",{id:"initialize"},"Initialize"),(0,i.kt)("p",null,"To use the Rounded Rectangle shader you need to apply it to the shader property of an element:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"//in template\nclass MyApp extends Lightning.Application {\n    static _template() {\n        return {\n            RoundedRectangle: {w: 300, h: 300, rect: true, shader: {type: Lightning.shaders.Spinner2, stroke: 20}}\n        }\n    }\n}\n\n//in a component\nthis.tag('RoundedRectangle').shader = {type: Lightning.shaders.Spinner2, stroke: 20}\n")),(0,i.kt)("p",null,"You can customize the appearance of the Spinner shader with the following setters."),(0,i.kt)("h2",{id:"setters"},"Setters"),(0,i.kt)("h3",{id:"radius"},"radius"),(0,i.kt)("p",null,"You can set the radius of the Spinner shader with a ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),". By default, this is calculated by dividing the current width by 2."),(0,i.kt)("h3",{id:"stroke"},"stroke"),(0,i.kt)("p",null,"You can set the width of the spinner with the stroke property setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),"."),(0,i.kt)("h3",{id:"color"},"color"),(0,i.kt)("p",null,"You can set the color with an ",(0,i.kt)("inlineCode",{parentName:"p"},"argb")," value typically used in Lightning. Default is ",(0,i.kt)("inlineCode",{parentName:"p"},"0xffffffff")),(0,i.kt)("h3",{id:"backgroundcolor"},"backgroundColor"),(0,i.kt)("p",null,"You can set the backgroundColor of the spinner with an ",(0,i.kt)("inlineCode",{parentName:"p"},"argb")," value typically used in Lightning. Default is ",(0,i.kt)("inlineCode",{parentName:"p"},"0xff000000"),"."),(0,i.kt)("h3",{id:"showdot"},"showDot"),(0,i.kt)("p",null,"You can show a dot where the shader starts to draw by setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,i.kt)("h3",{id:"clockwise"},"clockwise"),(0,i.kt)("p",null,"You can set if the spinner should spin clockwise or counter-clockwise by setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,i.kt)("h3",{id:"period"},"period"),(0,i.kt)("p",null,"You can set the speed at which the spinner spins by setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),"."),(0,i.kt)("h2",{id:"getters"},"Getters"),(0,i.kt)("h3",{id:"radius-1"},"radius"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"radius")," value."),(0,i.kt)("h3",{id:"stroke-1"},"stroke"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"stroke")," value."),(0,i.kt)("h3",{id:"color-1"},"color"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"color")," of the spinner."),(0,i.kt)("h3",{id:"backgroundcolor-1"},"backgroundColor"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"backgroundColor")," of the spinner."),(0,i.kt)("h3",{id:"showdot-1"},"showDot"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"showDot")," value."),(0,i.kt)("h3",{id:"clockwise-1"},"clockwise"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"clockwise")," value."),(0,i.kt)("h3",{id:"period-1"},"period"),(0,i.kt)("p",null,"returns the current ",(0,i.kt)("inlineCode",{parentName:"p"},"period")," value."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Visit the following site to see various examples of the Spinner2 Shader."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://lightningjs.io/examples/#/shaders/spinner"},"https://lightningjs.io/examples/#/shaders/spinner")))}u.isMDXComponent=!0}}]);