"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[1277],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(n),h=s,d=u["".concat(p,".").concat(h)]||u[h]||m[h]||r;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=n(7462),s=(n(7294),n(3905));const r={},i="State Nesting",o={unversionedId:"Components/CompStates/NestingStates",id:"Components/CompStates/NestingStates",title:"State Nesting",description:"You can nest states by defining a component state within another component state (which by itself contains its own states).",source:"@site/docs/Components/CompStates/NestingStates.md",sourceDirName:"Components/CompStates",slug:"/Components/CompStates/NestingStates",permalink:"/lightning-docs/docs/Components/CompStates/NestingStates",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/CompStates/NestingStates.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Component States",permalink:"/lightning-docs/docs/Components/CompStates/"},next:{title:"Change Events",permalink:"/lightning-docs/docs/Components/CompStates/StateChEvents"}},p={},l=[{value:"Live Demo",id:"live-demo",level:2}],c={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"state-nesting"},"State Nesting"),(0,s.kt)("p",null,"You can ",(0,s.kt)("em",{parentName:"p"},"nest")," states by defining a component state within another component state (which by itself contains its own states)."),(0,s.kt)("p",null,"You switch from a state to its nested state  as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"this._setState('MyStateName.MyNestedStateName')\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"advantage")," of nesting is that you can stay in one state while leveraging from the benefits of a sub state."),(0,s.kt)("p",null,"See the state nesting example below. If you press ",(0,s.kt)("strong",{parentName:"p"},"right"),", you enter the ",(0,s.kt)("em",{parentName:"p"},"blue")," (cube) state, and if you press ",(0,s.kt)("strong",{parentName:"p"},"right")," again, you enter its nested state (the ",(0,s.kt)("em",{parentName:"p"},"green")," cube)."),(0,s.kt)("h2",{id:"live-demo"},"Live Demo"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"//Press right to $enter() the blue state.\n//Press right again to $enter() its nested state, which is the green cube.\n\nclass BasicUsageExample extends lng.Application {\n    static _template() {\n        return {\n            ExamplanationText:{ x: 50, y: 28, w: 590, text:{ text: '', fontSize: 22, wordWrap: true, wordWrapWidth: 590, lineHeight: 30 }},\n            MyBlueCube:{\n               x: 100, y: 200, w: 100, h: 100, rect: true, color: 0xFF0034DD\n            },\n            MyGreenCube:{\n               x: 400, y: 200, w: 100, h: 100, rect: true, color: 0xFF24DD00\n            }\n        }\n    }\n    \n    _init(){\n        this._blueCubeAnimation = this.tag('MyBlueCube').animation({\n            duration: 3, repeat: -1, stopMethod: 'immediate',\n            actions: [{ p: 'rotation', v: { 0: { v: 0, sm: 0 }, 1: { v: -Math.PI * 2, sm: 0 } } }]\n        });\n        this._greenCubeAnimation = this.tag('MyGreenCube').animation({\n            duration: 3, repeat: -1, stopMethod: 'immediate',\n            actions: [{ p: 'rotation', v: { 0: { v: 0, sm: 0 }, 1: { v: Math.PI * 2, sm: 0 } } }]\n        });\n        this._setState('MyIdleState');\n    }\n        \n    static _states(){\n        return [\n             class MyBlueState extends this{\n                $enter(){\n                    this.tag('ExamplanationText').patch({ text:{ text: 'I am in my Blue state now! \\n (Press Left or Right)'}});\n                    this._blueCubeAnimation.play();                    \n                }\n                $exit(){\n                    this._blueCubeAnimation.pause();\n                }\n                _handleLeft(){\n                    this._setState('MyIdleState');\n                }\n                _handleRight(){\n                    this._setState('MyBlueState.MyNestedGreenState');\n                }\n                static _states(){\n                    return [\n                        class MyNestedGreenState extends MyBlueState{\n                            $enter(){\n                                this.tag('ExamplanationText').patch({ text:{ text: 'I am in Blue\\'s nested Green state now! \\n (Press Left)'}});\n                                this._greenCubeAnimation.play();\n                            }\n                            $exit(){\n                                this.tag('ExamplanationText').patch({ text:{ text: 'I am back in my Blue state now, \\nbut did not $enter(), because I was there all along! \\n (Press Left or Right)'}});\n                                this._greenCubeAnimation.pause();\n                            }\n                            _handleLeft(){\n                                this._setState('MyBlueState');\n                            }\n                        }\n                    ]\n                }                            \n            },\n            class MyIdleState extends this{\n                $enter(){\n                    this.tag('ExamplanationText').patch({ text:{ text: 'I am in my Idle state now! \\n (Press Right)'}});\n                    this._blueCubeAnimation.pause();\n                    this._greenCubeAnimation.pause();\n                }\n                _handleRight(){\n                    this._setState('MyBlueState');\n                }\n            }\n        ];\n    }\n}\n\nconst App = new BasicUsageExample({stage: {w: window.innerWidth, h: window.innerHeight, useImageWorker: false}});\ndocument.body.appendChild(App.stage.getCanvas());\n")))}m.isMDXComponent=!0}}]);