"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[9035],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=a,g=u["".concat(l,".").concat(h)]||u[h]||p[h]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const o={},i="Shaders",s={unversionedId:"RenderEngine/Shaders/index",id:"RenderEngine/Shaders/index",title:"Shaders",description:"Shaders in Lightning allow you to alter textures, or draw various effects over the GPU. By default, the Lightning Core provides shaders that apply some of the most commonly used effects for you to use.",source:"@site/docs/RenderEngine/Shaders/index.md",sourceDirName:"RenderEngine/Shaders",slug:"/RenderEngine/Shaders/",permalink:"/lightning-docs/docs/RenderEngine/Shaders/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RenderEngine/Shaders/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Render Tree",permalink:"/lightning-docs/docs/RenderEngine/RenderTree"},next:{title:"Dithering",permalink:"/lightning-docs/docs/RenderEngine/Shaders/Dithering"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Initialize",id:"initialize",level:3},{value:"Animating",id:"animating",level:3}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"shaders"},"Shaders"),(0,a.kt)("p",null,"Shaders in Lightning allow you to alter textures, or draw various effects over the GPU. By default, the Lightning Core provides shaders that apply some of the most commonly used effects for you to use."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"If you want to use shaders that come with the Lightning framework you need to import Lightning first."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import Lightning from '@lightningjs/core'\n")),(0,a.kt)("h3",{id:"initialize"},"Initialize"),(0,a.kt)("p",null,"To use a shader you need to apply a type to the shader property of an element:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"//in template\nclass MyApp extends Lightning.Application {\n    static _template() {\n        return {\n            Box: {w: 300, h: 300, rect: true, shader: {type: Lightning.shaders.RoundedRectangle, radius: 20}}\n        }\n    }\n}\n\n//in a component\nthis.tag('Box').shader = {type: Lightning.shaders.RoundedRectangle, radius: 20}\n")),(0,a.kt)("p",null,"Most of the shaders we provide have a selection of setters for you to customize the effect with, visit the available documentation for more information."),(0,a.kt)("h3",{id:"animating"},"Animating"),(0,a.kt)("p",null,"You can animate shaders by addressing the shader property of an element. For example, if you want to change the radius of a Rounded Rectangle:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const myAnimation = this.tag('Box').animation({\n  actions: [\n      {p: 'shader.radius', v: {0: 0, 1: 20}},\n  ]\n});\n")))}p.isMDXComponent=!0}}]);