"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[8827],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),m=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=m(t.components);return a.createElement(s.Provider,{value:e},t.children)},u="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=m(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||l;return n?a.createElement(g,i(i({ref:e},p),{},{components:n})):a.createElement(g,i({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[u]="string"==typeof t?t:r,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},201:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const l={},i="Value Smoothing",o={unversionedId:"Animations/ValueSmoothing",id:"Animations/ValueSmoothing",title:"Value Smoothing",description:"For each control point, you can specify how the value curve around it  should behave.",source:"@site/docs/Animations/ValueSmoothing.md",sourceDirName:"Animations",slug:"/Animations/ValueSmoothing",permalink:"/lightning-docs/docs/Animations/ValueSmoothing",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Animations/ValueSmoothing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/lightning-docs/docs/Animations/Methods"},next:{title:"Communication",permalink:"/lightning-docs/docs/Communication/"}},s={},m=[{value:"Attributes",id:"attributes",level:2},{value:"Live Demo",id:"live-demo",level:2}],p={toc:m},u="wrapper";function c(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"value-smoothing"},"Value Smoothing"),(0,r.kt)("p",null,"For each control point, you can specify how the value curve around it  should behave.\nThe following example produces a 'bouncing ball' effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{ p: 'y', \n    v: { \n        0: { v: -100, sm: 1, s:0 }, \n        0.33 : { v: 0, sm: 0.1, s: 0}, \n        0.67 : {v: -40, sm: 1, s: 0},\n        1: { v: 0, sm: 0.1 } \n    }\n}\n")),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v")),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"Value"),(0,r.kt)("td",{parentName:"tr",align:null},"Exact value at control point")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sm")),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"0.5"),(0,r.kt)("td",{parentName:"tr",align:null},"Smoothness"),(0,r.kt)("td",{parentName:"tr",align:null},"Smoothness of the curve around the point")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"s")),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"Slope"),(0,r.kt)("td",{parentName:"tr",align:null},"The slope (value per progress unit, 0 means flat, positive means 'curving upwards', negative means 'curving downwards' )")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sme")),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"0.5"),(0,r.kt)("td",{parentName:"tr",align:null},"Smooth end"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing curve smoothness, if different from (incoming) smoothness (",(0,r.kt)("inlineCode",{parentName:"td"},"sm"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"se")),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"Slope end"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing curve sloop, if different from (incoming) slope (",(0,r.kt)("inlineCode",{parentName:"td"},"s"),")")))),(0,r.kt)("h2",{id:"live-demo"},"Live Demo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"class BasicUsageExample extends lng.Application {\n    static _template() {\n        return {\n            Wrapper: {\n                x: 300, y: 300,\n                LilLightning:{\n                    src: '/Lightning/img/LngDocs_LilLightningIdle.png'\n                }\n            }\n        }\n    }\n    \n    _init() {\n        const myAnimation = this.tag('LilLightning').animation({\n            duration: 2,\n            repeat: -1,\n            actions: [\n                { \n                    p: 'y', \n                    v: { \n                        0: { v: -200, sm: 0.8, s:0 }, \n                        0.1 : {v: 0, sm: 0.1, s: 0}, \n                        0.2 : {v: -120, sm: 0.8, s: 0},\n                        0.3 : {v: 0, sm: 0.1, s: 0}, \n                        0.4 : {v: -60, sm: 0.8, s: 0},\n                        0.5 : {v: 0, sm: 0.1, s: 0}, \n                        0.6 : {v: -30, sm: 0.8, s: 0},\n                        0.7 : {v: 0, sm: 0.1, s: 0},\n                        0.8 : {v: -10, sm: 0.8, s: 0},\n                        0.9 : {v: 0, sm: 0.1, s: 0},\n                        1: { v: 0, sm: 0.8 } \n                    }\n                }\n            ]\n        });\n        myAnimation.start();\n    }\n}\n\n\nconst App = new BasicUsageExample({stage: {w: window.innerWidth, h: window.innerHeight, useImageWorker: false}});\ndocument.body.appendChild(App.stage.getCanvas());\n")))}c.isMDXComponent=!0}}]);