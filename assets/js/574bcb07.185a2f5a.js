"use strict";(self.webpackChunklightning_docs=self.webpackChunklightning_docs||[]).push([[6803],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,d=u["".concat(p,".").concat(g)]||u[g]||m[g]||o;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i="Patching",l={unversionedId:"Templates/Patching",id:"Templates/Patching",title:"Patching",description:"Patching is a way to change the properties of existing elements in a template.",source:"@site/docs/Templates/Patching.md",sourceDirName:"Templates",slug:"/Templates/Patching",permalink:"/lightning-docs/docs/Templates/Patching",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Templates/Patching.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flexbox",permalink:"/lightning-docs/docs/Templates/Flexbox"},next:{title:"Tags",permalink:"/lightning-docs/docs/Templates/Tags"}},p={},c=[{value:"Adding New Elements",id:"adding-new-elements",level:2},{value:"Removing Elements",id:"removing-elements",level:2},{value:"Live Demo",id:"live-demo",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"patching"},"Patching"),(0,r.kt)("p",null,"Patching is a way to change the properties of existing elements in a template."),(0,r.kt)("p",null,"You can use the Element method"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"patch(object : Object, createMode : Boolean)\n")),(0,r.kt)("p",null,"to patch part of the Render Tree."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A ",(0,r.kt)("inlineCode",{parentName:"p"},"patch")," object has the same structure as the associated template.")),(0,r.kt)("p",null,"Patching allows you to set multiple properties for multiple views in a ",(0,r.kt)("em",{parentName:"p"},"single")," statement. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"this.patch({\n    Parent: {\n        x: 150, alpha: 0.5,\n        Child: {\n            x: 100, y: 100\n        }\n    }\n});\n")),(0,r.kt)("p",null,"You can also call a patch ",(0,r.kt)("em",{parentName:"p"},"directly")," on a sub element:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'this.tag("Parent").patch({\n    x: 150, alpha: 0.5,\n    Child: {\n        x: 100, y: 100\n    }\n});\n')),(0,r.kt)("h2",{id:"adding-new-elements"},"Adding New Elements"),(0,r.kt)("p",null,"By default, only properties of ",(0,r.kt)("em",{parentName:"p"},"existing")," elements can be changed with patching."),(0,r.kt)("p",null,"If an element reference is ",(0,r.kt)("em",{parentName:"p"},"unknown"),", an error is generated. This is done to protect you from accidentally using the wrong references and creating new unnecessary elements."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you want to enable the creation of new elements in your patch, pass 'true' for the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"createMode")," argument.")),(0,r.kt)("h2",{id:"removing-elements"},"Removing Elements"),(0,r.kt)("p",null,"You can remove an element by specifying 'undefined' instead of the settings object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'this.tag("Parent").patch({\n    x: 150, alpha: 0.5,\n    Child: undefined\n});\n')),(0,r.kt)("h2",{id:"live-demo"},"Live Demo"),(0,r.kt)("p",null,"See the example below of how to patch the x-position for an object. Use the ",(0,r.kt)("strong",{parentName:"p"},"left")," or ",(0,r.kt)("strong",{parentName:"p"},"right")," key to move the object to its new position."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'class BasicUsageExample extends lng.Application {\n    static _template() {\n        return {\n            LilLightning:{ x: 100, y: 100, src: \'/Lightning/img/LngDocs_LilLightningIdle.png\' }\n        }\n    }\n    \n    _handleLeft(){\n        this.tag(\'LilLightning\').patch({ x: 100 });\n    }\n     \n    _handleRight(){\n        this.tag(\'LilLightning\').patch({ x: 400 });\n    }\n}\n\n\nconst options = {stage: {w: window.innerWidth, h: window.innerHeight, clearColor: 0x00000000, Canvas2D: false, useImageWorker: false}, debug: true}\noptions.keys = {\n    38: "Up",\n    40: "Down",\n    37: "Left",\n    39: "Right",\n    13: "Enter",\n    9: "Back",\n    8: "Back",\n    93: "Back",\n    174: "Back",\n    175: "Menu",\n    83: "Search"\n};\nconst App = new BasicUsageExample(options);\ndocument.body.appendChild(App.stage.getCanvas());\n')))}m.isMDXComponent=!0}}]);